{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Cnavbar.js","components/CAPIService.js","components/CHomepageFeed.js","components/CHomepage.js","components/CAddConferenceNew.js","components/CAddMedia.js","components/CAddTalk.js","components/CAddConferenceExistingList.js","components/CAddConferenceExisting.js","components/CAddConference.js","components/CEventList.js","components/CAddContactNew.js","components/CAddContact.js","components/CContactList.js","components/CAddEventTalkList.js","components/CAddEventTalk.js","components/CConferenceTalkList.js","components/CEventConference.js","components/CEventTalk.js","components/CEventMedia.js","components/CEvent.js","components/CEventBrowser.js","components/CConferences.js","components/CTalks.js","components/CMedia.js","components/CLogin.js","components/CPrivateRoute.js","components/CTest.js","components/Crouter.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Cnavbar","useHistory","type","theme","expand","href","navbar","active","className","onClick","baseUrl","data","axios","get","params","then","response","event_id","id","catch","res","speaker_id","name","address","facility","attendees","dei_affiliation","description","start","end","host","recruiting_partner","seasonality","talk_ids","speaker_email","phone","contact_id","CHomepageFeed","event_data_sorted","event_data","sort","a","b","valueOf","noGutters","style","height","border","margin","flush","map","event","moment","isAfter","squared","title","fromNow","CHomepage","localizer","momentLocalizer","setEvent_data","mounted","CAPIService","temp_array","i","event_pairs","length","push","event_name","event_start_time","toDate","event_end_time","paddingTop","maxWidth","sm","md","lg","defaultDate","Date","defaultView","events","CAddConferenceNew","setOpen","userID","setUserID","setName","setAddress","setFacility","setCity","setState","setZipcode","deiAffiliation","setDEIAffiliation","recruitingPartner","setRecruitingPartner","setAttendees","startDate","setStartDate","endDate","setEndDate","setDescription","e","preventDefault","FormatDate","doc_id","date","mm","getMonth","dd","getDate","getFullYear","join","onSubmit","paddingBottom","placeholder","onChange","target","htmlFor","checked","float","selected","width","CAddMedia","setData","addMedia","console","log","speaker_ids","time","link","verticalAlign","CAddTalks","props","addTalk","accepted_status","given_status","event_ids","submitted_status","talk_id","closeModal","window","location","reload","CAddConferenceExistingList","select_Event","selectedEvent","setSelectedEvent","isSelected","outline","selectEvent","CAddConferenceExisting","user_event_data","setIsSelected","matching","documents","j","handleSubmit","CAddConference","newActive","setNewActive","textAlign","tabs","CEventList","open","size","toggle","CAddContactNew","setPhone","setEmail","response2","CAddContact","CContactList","contact_ids","contacts","setContacts","host_id","phone_number","padding","contact","CAddEventTalk","event_talks","talk_pairs","talk_name","CConferenceTalkList","talks","setTalks","marginTop","talk","CEventConference","formData","setFormData","rating","setRating","setSpeaker_id","temp_data","host_ids","changeRating","user_rating","idx","item","color","fontSize","timestamp","order","offset","align","format","CEventTalk","setTalk","setEvent","eventId","setEventid","eventTalks","setEventTalks","get_talk","res2","add","display","justifyContent","alignItems","marginBottom","ev","CEventMedia","media","setMedia","marginRight","fontWeight","icon","faFileAlt","flex","flexWrap","faLink","faClock","faTags","CEvent","CEventBrowser","fluid","JSON","stringify","CConferences","CTalks","CMedia","media_pairs","media_name","CLogin","setPassword","error","setError","history","required","disabled","PrivateRoute","Component","component","rest","render","to","CTest","Crouter","path","exact","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e949d30d.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyC9mGfnU8Cse_JXQRqjJZ_lr-mNJmKnDl4\",\r\n    authDomain: \"rocket-mortgage-devrel-tracker.firebaseapp.com\",\r\n    databaseURL: \"https://rocket-mortgage-devrel-tracker-default-rtdb.firebaseio.com\",\r\n    projectId: \"rocket-mortgage-devrel-tracker\",\r\n    storageBucket: \"rocket-mortgage-devrel-tracker.appspot.com\",\r\n    messagingSenderId: \"314313322302\",\r\n    appId: \"1:314313322302:web:5fa1d59e84fe0b4d27466f\",\r\n    measurementId: \"G-JW0GPH1V70\"\r\n  });\r\n\r\n  export const auth = app.auth()\r\n  export default app","  \r\nimport React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"shards-ui/dist/css/shards.min.css\"\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport {\r\n  Button,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  FormInput,\r\n  Collapse\r\n} from \"shards-react\";\r\n\r\nexport default function Cnavbar() {\r\n  const { logout } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const history = useHistory()\r\n\r\n  const { currentUser } = useAuth()\r\n\r\n  async function Logout(e){\r\n    setError('')\r\n\r\n    try{\r\n      await logout()\r\n      history.push(\"/login\")\r\n    }\r\n    catch{\r\n      setError('Failed to log out')\r\n    }\r\n  }\r\n\r\n    return ( \r\n<Navbar type=\"dark\" theme=\"primary\" expand=\"md\">\r\n        <NavbarBrand href=\"/\">DevRel Tracker</NavbarBrand>\r\n\r\n          <Nav navbar>\r\n            <NavItem>\r\n              <NavLink active href=\"conferences\">\r\n                Conferences\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"talks\" active>\r\n                Talks\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"media\" active>\r\n                Other Media\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n\r\n          <Nav navbar className=\"ml-auto\">\r\n            {currentUser ? <Button theme=\"light\" onClick={() => {logout()}}>Logout</Button> : <div></div>}\r\n          </Nav>\r\n      </Navbar>\r\n    )\r\n}","import axios from 'axios'\r\nconst baseUrl = 'https://us-central1-rocket-mortgage-devrel-tracker.cloudfunctions.net/'\r\nconst cors_hack = 'http://localhost:8080/'\r\nconst getAllEvents = () => {\r\n  const request = axios.get(baseUrl + 'getAllEventIDsAndNames')\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getAllUserEvents = (email) => {\r\n  const request = axios.get(baseUrl + 'getSpeakerEvents?email=' + email)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getAllUserTalks = (email) => {\r\n  const request = axios.get(baseUrl + 'getSpeakerTalks?email=' + email)\r\n  return request.then(response => response.data)\r\n}\r\nconst getAllUserMedia = (email) => {\r\n  const request = axios.get(baseUrl + 'getSpeakerMediaIDs?email=' + email)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getEvent = (event_id) => {\r\n  const request = axios.get(baseUrl + 'getEventByID?ID=' + event_id)\r\n  return (\r\n    request.then(response => response.data)\r\n    .catch(res => {}))\r\n}\r\n\r\n\r\nconst getTalk = () => {\r\n  const request = axios.get(baseUrl + 'getAllTalks')\r\n  return request.then(response => response.data)\r\n}\r\nconst addRating = (data) => {\r\n  const request = axios.get(baseUrl + 'addRating' , {params:data})\r\n  return request.then(response => response.data)\r\n}\r\nconst addTalkToEventByEventId = (data) => {\r\n  const request = axios.get(baseUrl + 'addTalkToEventByEventId' , {params:data})\r\n  return request.then(response => response.data)\r\n}\r\nconst addEventToTalkByTalkId = (data) => {\r\n  const request = axios.get(baseUrl + 'addEventToTalkByTalkId' , {params:data})\r\n  return request.then(response => response.data)\r\n}\r\nconst addTalkToSpeakerBySpeakerId = (data) => {\r\n  const request = axios.get(baseUrl + 'addTalkToSpeakerBySpeakerId' , {params:data})\r\n  return request.then(response => response.data)\r\n}\r\nconst addSpeakerToTalkByTalkId  = (data) => {\r\n  const request = axios.get(baseUrl + 'addSpeakerToTalkByTalkId ' , {params:data})\r\n  return request.then(response => response.data)\r\n}\r\nconst getRatingByID = (id) => {\r\n  const request = axios.get(baseUrl + 'getRatingByID?ID='+id)\r\n  return request.then(response => response.data)\r\n}\r\nconst getAllMedia = () => {\r\n  const request = axios.get(baseUrl + 'getAllMedia')\r\n  return request.then(response => response.data)\r\n}\r\nconst getTalkByID = (id) => {\r\n  const request = axios.get(baseUrl + 'getTalkByID?ID='+id)\r\n  return request.then(response => response.data)\r\n}\r\nconst getMediaByID = (id) => {\r\n  const request = axios.get(baseUrl + 'getMediaByID?ID='+id)\r\n  return request.then(response => response.data)\r\n}\r\nconst addMedia = (data) => {\r\n  const request = axios.get(baseUrl + 'addMedia',{params:data})\r\n  return request.then(response => response.data)\r\n}\r\nconst getRatingByEventByID = (id) => {\r\n  const request = axios.get(baseUrl + 'getRatingByEventByID?ID='+id)\r\n  return request.then(response => response.data)\r\n}\r\nconst getAllRatings = () => {\r\n  const request = axios.get(baseUrl + 'getAllRatings')\r\n  return request.then(response => response.data)\r\n}\r\nconst getUserRatingOfEvent = (event_id, email) => {\r\n  const request = axios.get(baseUrl + 'getUserRatingAndAverageRatingOfEvent?event_id=' + event_id + '&email=' + email)\r\n  return request.then(response => response.data)\r\n}\r\nconst addTalk = (data) => {\r\n  const request = axios.get(baseUrl + 'addTalk',{params:data})\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\n\r\nconst addExistingEventToSpeaker = (speaker_id, event_id) => {\r\n  const request = axios.get(baseUrl + 'addEventToSpeakerBySpeakerId?speaker_id=' + speaker_id + '&event_id=' + event_id)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNewEventToSpeaker = (speaker_id, name, address, facility, attendees, dei_affiliation, description, start, end, host, recruiting_partner, seasonality, talk_ids) => {\r\n  const request = axios.get(baseUrl + 'addEvent?address=' + address + \"&attendees=\" + attendees + \"&facility=\" + facility + \"&dei_affiliation=\" + dei_affiliation + \"&description=\" + description + \"&name=\" + name + \"&start=\" + start + \"&end=\" + end + \"&host_ids=\" + host + \"&recruiting_partner=\" + recruiting_partner + \"&seasonality=\" + seasonality + \"&speaker_ids=\" + speaker_id + \"&talk_ids=\" + talk_ids)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getSpeaker = (speaker_email) => {\r\n  const request = axios.get(baseUrl + 'getSpeakerByEmail?email=' + speaker_email)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getAllHosts = () => {\r\n  const request = axios.get(baseUrl + 'getAllHosts')\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getHost = (host_id) => {\r\n  const request = axios.get(baseUrl + 'getHostByID?ID=' + host_id)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNewContact = (name, email, phone, event_id) => {\r\n  const request = axios.get(baseUrl + 'addHost?event_ids=' + event_id + \"&email=\" + email + \"&name=\" + name + \"&phone_number=\" + phone)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addContactToEvent = (contact_id,event_id) => {\r\n  const request = axios.get(baseUrl + 'addHostToEventByEventId?event_id=' + event_id + \"&host_id=\" + contact_id)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst getSpecifiedURL = (url) => {\r\n    const request = axios.get(url)\r\n    return (\r\n      request.then(response => response.data)\r\n      .catch(res => {}))\r\n  }\r\n\r\nexport default {addSpeakerToTalkByTalkId,addTalkToSpeakerBySpeakerId,addTalkToEventByEventId,getAllUserMedia,getAllUserEvents,getAllUserTalks,getRatingByID, addEventToTalkByTalkId, getUserRatingOfEvent, getTalkByID,addMedia,getMediaByID, getAllMedia,getAllEvents, getEvent, getTalk, getSpecifiedURL,addRating,getRatingByEventByID,addTalk,getAllRatings, addNewEventToSpeaker, addExistingEventToSpeaker, getSpeaker, getHost, addNewContact, addContactToEvent, getAllHosts}\r\n","import React from 'react'\r\nimport { ListGroup, ListGroupItem, Container, Row} from \"shards-react\";\r\nimport moment from 'moment'\r\n\r\nexport default function CHomepageFeed({event_data}) {\r\n\r\n    let event_data_sorted = event_data.sort((a, b) => a.start.valueOf() - b.start.valueOf())\r\n    \r\n    return (\r\n        <Container>\r\n            <Row noGutters={ true } style={ { height: '70px', border: '1px solid rgba(0,0,0,.125)' } }>\r\n                <h5 style={ { margin: \"auto\" } }>Upcoming Events</h5>\r\n                <div style={ { margin: \"auto\" } }>\r\n                </div>\r\n            </Row>\r\n\r\n\r\n            <ListGroup flush={false} >\r\n                {event_data_sorted.map(event => {  if (moment(event.start).isAfter(moment())){\r\n                    return(\r\n\r\n                        <ListGroupItem squared theme='light' key = {event.id}>\r\n                        <div>{event.title}</div>\r\n                        <div>{moment(event.start).fromNow()}</div>\r\n                        </ListGroupItem> \r\n                        \r\n                    )\r\n                    }\r\n                    else{\r\n                        return(<div></div>)\r\n                    }\r\n                })}\r\n            </ListGroup>\r\n        </Container>\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { ListGroup, ListGroupItem, Button, Container, Row, Col, Modal, ModalBody, FormInput,FormTextarea    } from \"shards-react\";\r\n\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport CAPIService from './CAPIService'\r\nimport CHomepageFeed from './CHomepageFeed'\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\n\r\nexport default function CHomepage() {\r\n\r\n    const localizer = momentLocalizer(moment);\r\n\r\n    const [event_data, setEvent_data] = useState([])\r\n\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        CAPIService.getAllUserEvents(currentUser.email)\r\n          .then(response => {\r\n            if (mounted) {\r\n              setLoading(false)\r\n            }\r\n    \r\n            var temp_array = []\r\n            for (var i = 0; i < response.event_pairs.length; i++){\r\n              temp_array.push({\r\n                title : response.event_pairs[i].event_name,\r\n                id : response.event_pairs[i].id,\r\n                start : moment(response.event_pairs[i].event_start_time).toDate(),\r\n                end : moment(response.event_pairs[i].event_end_time).toDate()    \r\n              })\r\n            }\r\n            setEvent_data(temp_array)\r\n          })\r\n    \r\n          return function cleanup() {\r\n            mounted = false\r\n          }\r\n      }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div> {loading ? <p>loading...</p> :\r\n          <div>\r\n            <Container  style = {{paddingTop: \"20px\", maxWidth: \"90%\"}}>    \r\n              <Row>\r\n            <Col sm=\"12\" md=\"4\" lg=\"3\">\r\n            <CHomepageFeed event_data={event_data}/>\r\n            </Col>\r\n            <Col>\r\n                <Calendar localizer={localizer} defaultDate={new Date()} defaultView=\"month\" events={event_data} style={{ height: \"100vh\" }} />  \r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n            </div>\r\n            }\r\n            </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nimport { Form, FormInput, FormTextarea, FormGroup, FormCheckbox, FormSelect, Container, Row, Col, Button,   Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"shards-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from 'moment'\r\nimport CAPIService from './CAPIService';\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function CAddConferenceNew({setOpen}) {\r\n\r\n  const { currentUser } = useAuth()\r\n\r\n  const [userID, setUserID] = useState('')\r\n\r\n  const [name, setName] = useState('')\r\n\r\n  const [address, setAddress] = useState('')\r\n  const [facility, setFacility] = useState('')\r\n  const [city, setCity] = useState('')\r\n  const [state, setState] = useState('')\r\n  const [zipcode, setZipcode] = useState('')\r\n\r\n  const [deiAffiliation, setDEIAffiliation] = useState(false)\r\n  const [recruitingPartner, setRecruitingPartner] = useState(false)\r\n  const [attendees, setAttendees] = useState('')\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  const [description, setDescription] = useState('')\r\n  \r\n\r\n  useEffect(() => {\r\n    CAPIService.getSpeaker(currentUser.email)\r\n      .then(response => {\r\n        setUserID(response.speaker_id)\r\n      })\r\n  }, [])\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault()\r\n    const start = FormatDate(startDate) + 'T00:00:00'\r\n    const end = FormatDate(endDate) + 'T00:00:00'\r\n\r\n\r\n\r\n    //call to submit data\r\n    await CAPIService.addNewEventToSpeaker(userID, name, address, facility, attendees, deiAffiliation, description, start, end, \"\", recruitingPartner, \"\", \"\")\r\n    .then(response => { \r\n      CAPIService.addExistingEventToSpeaker(userID, response.doc_id).then(response => {\r\n        setOpen(false)\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n   function FormatDate(date) {\r\n    var mm = date.getMonth() + 1;\r\n    var dd = date.getDate();\r\n  \r\n    return [date.getFullYear(),\r\n            (mm>9 ? '' : '0') + mm,\r\n            (dd>9 ? '' : '0') + dd\r\n           ].join('-');\r\n  };\r\n\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit}>\r\n          <Container>\r\n            <Row><h4 style={{margin: 'auto', paddingTop:'20px'}}>New Conference</h4></Row>\r\n            <Row style={{paddingBottom: '20px'}}><FormInput id=\"#conference_name\" placeholder=\"Conference name\" onChange={(e) => {setName(e.target.value)}}/></Row>\r\n            <Row>\r\n              <Col>\r\n              <FormGroup>\r\n                <label htmlFor=\"#location\">Location Info</label>\r\n                <FormInput id=\"#facility\" placeholder=\"Facility\" onChange={(e) => {setFacility(e.target.value)}}/>\r\n                <FormInput id=\"#address\" placeholder=\"Address\" onChange={(e) => {setAddress(e.target.value)}}/>\r\n                <FormInput id=\"#city\" placeholder=\"City\" onChange={(e) => {setCity(e.target.value)}}/>\r\n                <FormInput id=\"#state\" placeholder=\"State\" onChange={(e) => {setState(e.target.value)}}/>\r\n                <FormInput id=\"#zipcode\" placeholder=\"Zipcode\" onChange={(e) => {setZipcode(e.target.value)}}/>\r\n\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"#other\">Other</label>\r\n                <FormCheckbox checked={deiAffiliation} onChange={() => {setDEIAffiliation(!deiAffiliation)}}>DEI Affiliation</FormCheckbox>\r\n                <FormCheckbox checked={recruitingPartner} onChange={() => {setRecruitingPartner(!recruitingPartner)}}>Recruiting Partner</FormCheckbox> \r\n                <FormInput id=\"#numofattendees\" placeholder=\"Number of attendees\" onChange={(e) => {setAttendees(e.target.value)}}/>               \r\n              </FormGroup>\r\n              </Col>\r\n              <Col>\r\n              <div style={{float:'right', paddingTop: '30px'}}><label htmlFor=\"#startdate\">Start Date: </label><DatePicker selected={startDate} onChange={date => setStartDate(date)} style={{float:'right'}}/></div>\r\n              <div style={{float:'right'}}><label htmlFor=\"#enddate\">End Date: </label><DatePicker selected={endDate} onChange={date => setEndDate(date)} style={{float:'right'}}/></div>\r\n              <FormGroup>\r\n                <FormTextarea id=\"#description\" placeholder=\"Brief description here...\" style={{height:'165px'}} onChange={(e) => {setDescription(e.target.value)}}/>\r\n              </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Button squared style={{width:'130px', height:'50px', float:'right'}}>Submit</Button>\r\n        </Container>\r\n      </Form>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\n\r\nimport { Form, FormInput, FormTextarea, ModalBody, FormGroup, Container, Row, Col, Button } from \"shards-react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport CAPIService from './CAPIService'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function CAddMedia() {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [data, setData] = useState({});\r\n    const [value, onChange] = useState(new Date());\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    const addMedia = async () => {\r\n        const {speaker_id} = await CAPIService.getSpeaker(currentUser.email)\r\n        console.log(startDate);\r\n        CAPIService.addMedia({\r\n          ...data,\r\n          speaker_ids: speaker_id, \r\n          time: value\r\n        })\r\n          .then(res => {\r\n            console.log(res);\r\n          })\r\n      }\r\n\r\n\r\n    return (\r\n\r\n        <ModalBody>\r\n            <Form>\r\n                <Container>\r\n                    <Row><h4 style={ { margin: 'auto' } }>Add new Media</h4></Row>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"#name\">Name</label>\r\n                        <FormInput id=\"#name\" placeholder=\"Name\"  onChange={(e)=>setData({...data,name:e.target.value})} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"#type\">Type</label>\r\n                        <FormInput id=\"#type\" placeholder=\"Type\"  onChange={(e)=>setData({...data,type:e.target.value})}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"#link\">Content link</label>\r\n                        <FormInput id=\"#link\" placeholder=\"Link\"  onChange={(e)=>setData({...data,link:e.target.value})} />\r\n                    </FormGroup>\r\n                    <div style={ { float: 'right' } }><label htmlFor=\"#time\">Date: </label><DatePicker\r\n                        onChange={onChange}\r\n                        value={value}\r\n                    /></div>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"#description\">Description</label>\r\n                        <FormTextarea id=\"#description\"  onChange={(e)=>setData({...data,description:e.target.value})} placeholder=\"Brief description here...\" style={ { height: '157px', verticalAlign: 'text-top' } } />\r\n                    </FormGroup>\r\n                    <Button onClick={ addMedia } squared style={ { width: '130px', height: '50px' } }>Submit</Button>\r\n                </Container>\r\n            </Form>\r\n        </ModalBody>\r\n    )\r\n}","import React, { useState } from 'react'\r\n\r\nimport { Form, FormInput, FormTextarea, ModalBody, FormGroup, Container, Row, Col, Button } from \"shards-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport CAPIService from './CAPIService'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function CAddTalks(props) {\r\n  const { currentUser } = useAuth()\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [data, setData] = useState({});\r\n  const addTalk = async () => {\r\n    \r\n    const {speaker_id} = await CAPIService.getSpeaker(currentUser.email)\r\n    await CAPIService.addTalk({\r\n      ...data,\r\n      accepted_status: false,\r\n      // attendees: 1,\r\n      // description: 1,\r\n      // title: 1,\r\n      given_status: false,\r\n      event_ids:\"\",\r\n      speaker_ids: speaker_id,\r\n      submitted_status: false,\r\n\r\n    })\r\n      .then(res => {\r\n        console.log(res);\r\n\r\n        CAPIService.addTalkToSpeakerBySpeakerId({speaker_id:speaker_id, talk_id:res.doc_id}).then(res => {\r\n          console.log(res)\r\n\r\n          props.closeModal()\r\n          window.location.reload();\r\n        })\r\n      })\r\n\r\n\r\n\r\n     \r\n  }\r\n\r\n  return (\r\n\r\n    <ModalBody>\r\n      <Form>\r\n        <Container>\r\n          <Row><h4 style={ { margin: 'auto', paddingTop: '20px' } }>Add a Talk</h4></Row>\r\n          <FormGroup>\r\n            <label htmlFor=\"#time\">Title</label>\r\n            <FormInput id=\"#title\" placeholder=\"Title\" onChange={(e)=>setData({...data,title:e.target.value})}/>\r\n          </FormGroup>\r\n          {/*<FormGroup>\r\n            <label htmlFor=\"#attendees\">Attendees</label>\r\n            <FormInput id=\"#attendees\" placeholder=\"attendees\"  onChange={(e)=>setData({...data,attendees:e.target.value})}/>\r\n          </FormGroup>*/}\r\n          {/* <FormGroup>\r\n            <label htmlFor=\"#time\">Time</label>\r\n            <FormInput id=\"#starttime\" placeholder=\"Start time\" />\r\n            <FormInput id=\"#endtime\" placeholder=\"End time\" />\r\n          </FormGroup> */}\r\n          {/* <div style={ { float: 'right' } }><label htmlFor=\"#contact\">Date: </label><DatePicker onChange={ date => setStartDate(date) } style={ { float: 'right' } } /></div> */ }\r\n          <FormGroup>\r\n            <label htmlFor=\"#description_label\">Description</label>\r\n            <FormTextarea  onChange={(e)=>setData({...data,description:e.target.value})} id=\"#description\" placeholder=\"Brief description here...\" style={ { height: '157px', verticalAlign: 'text-top' } } />\r\n          </FormGroup>\r\n          <Button onClick={ addTalk } squared style={ { width: '130px', height: '50px' } }>Submit</Button>\r\n        </Container>\r\n      </Form>\r\n    </ModalBody>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { ListGroup, ListGroupItem, Button, Container, Row, Col, Modal, ModalBody, FormInput,FormTextarea    } from \"shards-react\";\r\n\r\nimport CAddConference from './CAddConference'\r\nimport CAddMedia from './CAddMedia';\r\nimport CAddTalks from './CAddTalk'\r\n\r\nexport default function CAddConferenceExistingList({ event_data, select_Event }) {\r\n\r\n\r\n    const [selectedEvent, setSelectedEvent] = useState('')\r\n\r\n    const selectEvent = (event) => {\r\n        setSelectedEvent(event)\r\n        select_Event(event)\r\n    }\r\n    const isSelected = (event) => {\r\n        if (event === selectedEvent) { return (true) }\r\n        else { return (false) }\r\n    }\r\n    \r\n    return (\r\n        <Container >\r\n            <Row noGutters={ true } style={ { height: '70px', border: '1px solid rgba(0,0,0,.125)' } }>\r\n            <h4 style={{margin: 'auto'}}>Existing Conference</h4>\r\n            </Row>\r\n\r\n\r\n            <ListGroup flush={false} >\r\n                {event_data.map(event => {\r\n                    return(\r\n                        isSelected(event) ? \r\n                        <Button squared theme='light' key = {event.id}> {event.name}</Button> \r\n                        : \r\n                        <Button squared outline theme='light' \r\n                        key = {event.id} onClick={() => {selectEvent(event)}}> {event.name}</Button>\r\n                    )\r\n                })}\r\n            </ListGroup>\r\n        </Container>\r\n\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport CAPIService from './CAPIService'\r\n\r\nimport CAddConferenceExistingList from './CAddConferenceExistingList'\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nimport { Form, FormInput, FormTextarea, FormGroup, Container, Row, Col, Button } from \"shards-react\";\r\n\r\nexport default function CAddConferenceExisting({user_event_data, setOpen}) {\r\n\r\n    const [selectedEvent, setSelectedEvent] = useState()\r\n    const [isSelected, setIsSelected] = useState(false)\r\n\r\n    const [event_data, setEvent_data] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [userID, setUserID] = useState('')\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        CAPIService.getAllEvents()\r\n          .then(response => {\r\n            if (mounted) {\r\n              setLoading(false)\r\n            }\r\n    \r\n            var temp_array = []\r\n            var matching = false\r\n\r\n            for (var i = 0; i < response.documents.length; i++){\r\n              matching = false\r\n              for (var j = 0; j < user_event_data.length; j++){\r\n                  if (user_event_data[j].id === response.documents[i].event_id){\r\n                    matching = true\r\n                  }\r\n              }\r\n              if (matching === false){\r\n              temp_array.push({\r\n                name : response.documents[i].name,\r\n                id : response.documents[i].event_id      \r\n              })\r\n            }\r\n            }\r\n\r\n\r\n            setEvent_data(temp_array)\r\n            CAPIService.getSpeaker(currentUser.email).then(response => {\r\n              setUserID(response.speaker_id)\r\n            })\r\n\r\n          })\r\n    \r\n          return function cleanup() {\r\n            mounted = false\r\n          }\r\n      }, [])\r\n\r\n      const select_Event = (event) => {\r\n        setSelectedEvent(event.id)\r\n        setIsSelected(true)\r\n        \r\n    }\r\n\r\n        const handleSubmit = async (e) => {\r\n          e.preventDefault()\r\n            //call api to add selectedEvent to speaker's connections\r\n            await CAPIService.addExistingEventToSpeaker(userID, selectedEvent)\r\n          .then(response => {\r\n            console.log(response)\r\n            setOpen(false)\r\n          })\r\n        }\r\n\r\n\r\n    return (\r\n        <div> {loading ? <p>loading...</p> :\r\n                <Container>\r\n\r\n\r\n                    <CAddConferenceExistingList event_data={event_data} select_Event={select_Event}/>\r\n\r\n                    <Form onSubmit={handleSubmit}style={{paddingTop:'20px'}} >\r\n                    <Button squared style={{width:'130px', height:'50px', float:'right'}}>Add to My Conferences</Button>\r\n                    </Form>\r\n                </Container>\r\n        }</div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport CAddConferenceNew from './CAddConferenceNew'\r\nimport CAddConferenceExisting from './CAddConferenceExisting'\r\n\r\nimport { ModalBody, Nav, NavItem, NavLink } from \"shards-react\";\r\n\r\nexport default function CAddConference({event_data, setOpen}) {\r\n  const [newActive, setNewActive] = useState(true);\r\n\r\n\r\n    return (\r\n      <ModalBody>\r\n\r\n        <h4 style={{paddingTop:'20px', textAlign:'center'}}>Add a conference</h4>\r\n        <Nav tabs>\r\n              <NavItem>{newActive ? <NavLink active>New</NavLink> : <NavLink onClick={() => {setNewActive(true)}}>New</NavLink>}</NavItem>\r\n              <NavItem>{newActive ? <NavLink onClick={() => {setNewActive(false)}}>Existing</NavLink> : <NavLink active>Existing</NavLink>}</NavItem>\r\n            </Nav>\r\n\r\n            {newActive ? <CAddConferenceNew setOpen={setOpen}/> : <CAddConferenceExisting user_event_data={event_data} setOpen={setOpen}/> }\r\n  </ModalBody>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { ListGroup, ListGroupItem, Button, Container, Row, Col, Modal, ModalBody, FormInput, FormTextarea } from \"shards-react\";\r\n\r\nimport CAddConference from './CAddConference'\r\nimport CAddMedia from './CAddMedia';\r\nimport CAddTalks from './CAddTalk'\r\n\r\nexport default function CEventList({ type, event_data, select_Event }) {\r\n\r\n\r\n    const [selectedEvent, setSelectedEvent] = useState('')\r\n    const [open, setOpen] = useState(false)\r\n    const selectEvent = (event) => {\r\n        setSelectedEvent(event)\r\n        select_Event(event)\r\n    }\r\n    const isSelected = (event) => {\r\n        if (event === selectedEvent) { return (true) }\r\n        else { return (false) }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setOpen(false)\r\n    }\r\n    const addEvent = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <Container >\r\n            <Row noGutters={ true } style={ { height: '70px', border: '1px solid rgba(0,0,0,.125)' } }>\r\n                <h5 style={ { margin: \"auto\" } }>Your { type }s</h5>\r\n                <div style={ { margin: \"auto\" } }>\r\n                    <Button outline size='sm' theme=\"light\" onClick={ addEvent } href=\"\">+</Button>\r\n                </div>\r\n            </Row>\r\n\r\n\r\n            <ListGroup flush={ false } >\r\n                { event_data.map(event => {\r\n                    return (\r\n                        isSelected(event) ?\r\n                            <Button squared theme='light' key={ event.id }> { event.name }</Button>\r\n                            :\r\n                            <Button squared outline theme='light'\r\n                                key={ event.id } onClick={ () => { selectEvent(event) } }> { event.name }</Button>\r\n                    )\r\n                }) }\r\n            </ListGroup>\r\n            <Modal open={ open } toggle={ () => setOpen(!open) } >\r\n                {\r\n                    type === 'Talk' ? <CAddTalks closeModal={ closeModal } /> : type === 'Media' ? <CAddMedia closeModal={ closeModal } /> : <CAddConference event_data={ event_data } setOpen={ setOpen } />\r\n                }\r\n\r\n            </Modal>\r\n        </Container>\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport { Form, FormInput, FormGroup, Container, Row, Col, Button } from \"shards-react\";\r\nimport CAPIService from './CAPIService';\r\n\r\n\r\nexport default function CAddContactNew({event_id, setOpen}) {\r\n  const [name, setName] = useState('')\r\n  const [email, setPhone] = useState('')\r\n  const [phone, setEmail] = useState('')\r\n\r\n  async function handleSubmit(e){\r\n      e.preventDefault()\r\n\r\n    //call to submit data\r\n    await CAPIService.addNewContact(name, email, phone, event_id)\r\n    .then(response => { \r\n      CAPIService.addContactToEvent(response.doc_id, event_id).then(response2 => {\r\n        console.log(response.doc_id)\r\n        setOpen(false)\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit}>\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n              <FormGroup>\r\n                <label htmlFor=\"#location\">Contact Info</label>\r\n                <FormInput id=\"#name\" placeholder=\"Name\" onChange={(e) => {setName(e.target.value)}}/>\r\n                <FormInput id=\"#phone\" placeholder=\"Phone Number\" onChange={(e) => {setPhone(e.target.value)}}/>\r\n                <FormInput id=\"#email\" placeholder=\"Email\" onChange={(e) => {setEmail(e.target.value)}}/>\r\n              </FormGroup>    \r\n              </Col>\r\n            </Row>\r\n            <Button squared style={{width:'130px', height:'50px', float:'right'}}>Submit</Button>\r\n        </Container>\r\n      </Form>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport CAddContactNew from './CAddContactNew'\r\n\r\nimport { ModalBody, Nav, NavItem, NavLink } from \"shards-react\";\r\n\r\nexport default function CAddContact({event_id, setOpen}) {\r\n\r\n\r\n    return (\r\n      <ModalBody>\r\n        <h4 style={{paddingTop:'20px', textAlign:'center'}}>Add a Contact</h4>\r\n\r\n        <CAddContactNew event_id={event_id} setOpen={setOpen}/>\r\n\r\n  </ModalBody>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { ListGroup, ListGroupItem, Button, Container, Row, Col, Modal, ModalBody, FormInput,FormTextarea    } from \"shards-react\";\r\n\r\nimport CAPIService from './CAPIService'\r\nimport CAddContact from './CAddContact'\r\n\r\nexport default function CContactList({contact_ids, event_id}) {\r\n    const [contacts, setContacts] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [open,setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        CAPIService.getAllHosts()\r\n          .then(response => {\r\n            if (mounted) {\r\n              setLoading(false)\r\n            }\r\n    \r\n            var temp_array = []\r\n\r\n            for (var i = 0; i < contact_ids.length; i++){\r\n              for (var j = 0; j < response.documents.length; j++){\r\n                  if (contact_ids[i] === response.documents[j].host_id){\r\n                    temp_array.push({\r\n                        host_id : response.documents[i].host_id,\r\n                        name : response.documents[i].name,\r\n                        email : response.documents[i].email,\r\n                        phone : response.documents[i].phone_number\r\n                      })\r\n                    break\r\n                  }\r\n              }\r\n\r\n            }\r\n            setContacts(temp_array)\r\n          })\r\n    \r\n          return function cleanup() {\r\n            mounted = false\r\n          }\r\n      }, [contact_ids])\r\n\r\n      const addContact = () => {\r\n        setOpen(!open)\r\n\r\n    }\r\n\r\n    return (\r\n        <div style = {{width:'250px', padding:0}} >\r\n        {loading ? <div></div>  :\r\n        <Container style = {{width:'100%'}} >\r\n            <Row noGutters={ true } style={ { height: '70px', border: '1px solid rgba(0,0,0,.125)' } }>\r\n                <h5 style={ { margin: \"auto\" } }>Contacts</h5>\r\n                <div style={ { margin: \"auto\" } }>\r\n                    <Button outline size='sm' theme=\"light\" onClick={ addContact } href=\"\">+</Button>\r\n                </div>\r\n            </Row>\r\n\r\n            {(contacts.length === 0) ? <div>no contacts</div> : \r\n            <ListGroup flush={false}>\r\n                \r\n                {contacts.map(contact => {\r\n                    \r\n\r\n                    return(\r\n                        <ListGroupItem squared theme='light' key = {contact.host_id}>\r\n                            <div style = {{width:'100%'}}>{contact.name}</div>\r\n                            <div style = {{width:'100%'}}>{contact.email}</div>\r\n                            <div style = {{width:'100%'}}>{contact.phone}</div>\r\n                        </ListGroupItem>\r\n                    )\r\n                })}\r\n            </ListGroup>\r\n            }\r\n\r\n            <Modal open={ open } toggle={ ()=>setOpen(!open)} >\r\n                {\r\n                    < CAddContact event_id={event_id} setOpen={setOpen}/>\r\n                }\r\n                \r\n            </Modal>\r\n        </Container>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { ListGroup, ListGroupItem, Button, Container, Row, Col, Modal, ModalBody, FormInput,FormTextarea    } from \"shards-react\";\r\n\r\nimport CAddConference from './CAddConference'\r\nimport CAddMedia from './CAddMedia';\r\nimport CAddTalks from './CAddTalk'\r\n\r\nexport default function CAddConferenceExistingList({ event_data, select_Event }) {\r\n\r\n\r\n    const [selectedEvent, setSelectedEvent] = useState('')\r\n\r\n    const selectEvent = (event) => {\r\n        setSelectedEvent(event)\r\n        select_Event(event)\r\n    }\r\n    const isSelected = (event) => {\r\n        if (event === selectedEvent) { return (true) }\r\n        else { return (false) }\r\n    }\r\n    \r\n    return (\r\n        <Container >\r\n            <Row noGutters={ true } style={ { height: '70px', border: '1px solid rgba(0,0,0,.125)' } }>\r\n            <h4 style={{margin: 'auto'}}>Your Talks</h4>\r\n            </Row>\r\n\r\n\r\n            <ListGroup flush={false} >\r\n                {event_data.map(event => {\r\n                    return(\r\n                        isSelected(event) ? \r\n                        <Button squared theme='light' key = {event.id}> {event.name}</Button> \r\n                        : \r\n                        <Button squared outline theme='light' \r\n                        key = {event.id} onClick={() => {selectEvent(event)}}> {event.name}</Button>\r\n                    )\r\n                })}\r\n            </ListGroup>\r\n        </Container>\r\n\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport CAPIService from './CAPIService'\r\n\r\nimport CAddEventTalkList from './CAddEventTalkList'\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nimport { Form, FormInput, FormTextarea, FormGroup, Container, Row, Col, Button } from \"shards-react\";\r\n\r\nexport default function CAddEventTalk({event_talks, event_id, setOpen}) {\r\n\r\n    const [selectedEvent, setSelectedEvent] = useState()\r\n    const [isSelected, setIsSelected] = useState(false)\r\n\r\n    const [event_data, setEvent_data] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [userID, setUserID] = useState('')\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        CAPIService.getAllUserTalks(currentUser.email)\r\n          .then(response => {\r\n            if (mounted) {\r\n              setLoading(false)\r\n            }\r\n    \r\n            var temp_array = []\r\n            var matching = false\r\n\r\n            for (var i = 0; i < response.talk_pairs.length; i++){\r\n              matching = false\r\n              for (var j = 0; j < event_talks.length; j++){\r\n                  if (event_talks[j].id === response.talk_pairs[i].id){\r\n                    matching = true\r\n                  }\r\n              }\r\n              if (matching === false){\r\n              temp_array.push({\r\n                name : response.talk_pairs[i].talk_name,\r\n                id : response.talk_pairs[i].id      \r\n              })\r\n            }\r\n            }\r\n\r\n            setEvent_data(temp_array)\r\n            CAPIService.getSpeaker(currentUser.email).then(response => {\r\n              setUserID(response.speaker_id)\r\n            })\r\n\r\n          })\r\n    \r\n          return function cleanup() {\r\n            mounted = false\r\n          }\r\n      }, [currentUser.email, event_talks])\r\n\r\n      const select_Event = (event) => {\r\n        setSelectedEvent(event.id)\r\n        setIsSelected(true)\r\n        \r\n    }\r\n\r\n        const handleSubmit = async (e) => {\r\n            //call api to add selectedEvent to speaker's connections\r\n            e.preventDefault()\r\n\r\n            await CAPIService.addTalkToEventByEventId({talk_id: selectedEvent,event_id: event_id}).then(response => {\r\n              CAPIService.addEventToTalkByTalkId({talk_id: selectedEvent,event_id: event_id}).then(response2 => { \r\n                console.log(selectedEvent)\r\n                console.log(event_id)\r\n                setOpen(false)\r\n              })\r\n            })\r\n        }\r\n\r\n\r\n    return (\r\n        <div> {loading ? <p>loading...</p> :\r\n                <Container>\r\n\r\n\r\n                    <CAddEventTalkList event_data={event_data} select_Event={select_Event}/>\r\n\r\n                    <Form onSubmit={handleSubmit}style={{paddingTop:'20px', paddingBottom: '20px'}} >\r\n                    <Button squared style={{width:'130px', height:'50px', float:'right'}}>Add talk to conference</Button>\r\n                    </Form>\r\n                </Container>\r\n        }</div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { ListGroup, ListGroupItem, Button, Container, Row, Col, Modal, ModalBody, FormInput,FormTextarea    } from \"shards-react\";\r\n\r\nimport CAPIService from './CAPIService'\r\nimport CAddEventTalk from './CAddEventTalk'\r\n\r\nexport default function CConferenceTalkList({talk_ids, event_id}) {\r\n    const [talks, setTalks] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [open,setOpen] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        CAPIService.getTalk()\r\n          .then(response => {\r\n            if (mounted) {\r\n              setLoading(false)\r\n            }\r\n    \r\n            var temp_array = []\r\n            \r\n            console.log(response)\r\n            console.log(talk_ids)\r\n\r\n            if (talk_ids) {\r\n            for (var i = 0; i < talk_ids.length; i++){\r\n              for (var j = 0; j < response.documents.length; j++){\r\n                  if (talk_ids[i] === response.documents[j].talk_id){\r\n                    temp_array.push({\r\n                        talk_id : response.documents[j].talk_id,\r\n                        title : response.documents[j].title,\r\n                        speaker_ids : response.documents[j].speaker_ids\r\n                      })\r\n                  }\r\n              }\r\n\r\n            }\r\n        }\r\n            setTalks(temp_array)\r\n          })\r\n    \r\n          return function cleanup() {\r\n            mounted = false\r\n          }\r\n      }, [talk_ids])\r\n\r\n      const addTalk = () => {\r\n        setOpen(!open)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {loading ? <div></div>  :\r\n        <Container style = {{width:'250px', float:'right', marginTop:'20px'}} >\r\n            <Row noGutters={ true } style={ { height: '70px', border: '1px solid rgba(0,0,0,.125)' } }>\r\n                <h5 style={ { margin: \"auto\" } }>Talks</h5>\r\n                <div style={ { margin: \"auto\" } }>\r\n                    <Button outline size='sm' theme=\"light\" onClick={ addTalk } href=\"\">+</Button>\r\n                </div>\r\n            </Row>\r\n\r\n            {(talks.length === 0) ? <div>no talks</div> :\r\n            <ListGroup flush={false}>\r\n                {talks.map(talk => {\r\n                    \r\n\r\n                    return(\r\n                        <ListGroupItem squared theme='light' key = {talk.talk_id}>\r\n                            <div style = {{width:'100%'}}>{talk.title}</div>\r\n\r\n                        </ListGroupItem>\r\n                    )\r\n                })}\r\n            </ListGroup>}\r\n\r\n            <Modal open={ open } toggle={ ()=>setOpen(!open)} >\r\n                {\r\n                    < CAddEventTalk event_talks={talks} setOpen={setOpen} event_id={event_id}/>\r\n                }\r\n                \r\n            </Modal>\r\n        </Container>\r\n        }\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {Container, Row, Col,Button, Badge} from 'shards-react'\r\n\r\nimport moment from 'moment'\r\n\r\nimport CAPIService from './CAPIService'\r\nimport CContactList from './CContactList'\r\nimport CConferenceTalkList from './CConferenceTalkList'\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function CEventConference({event_id}) {\r\n    const [formData, setFormData] = useState({\r\n        name : \"\",\r\n        id : \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        address: \"\",\r\n        facility: \"\",\r\n        description: \"\",\r\n        dei_affiliation: false,\r\n        attendees: \"\",\r\n        recruiting_partner: false,\r\n        contact_ids: []\r\n    })\r\n    const [loading, setLoading] = useState(true)\r\n    const [rating, setRating] = useState(-1)\r\n\r\n    const [speaker_id, setSpeaker_id] = useState('')\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        CAPIService.getEvent(event_id)\r\n          .then(response => {\r\n            if (mounted) {\r\n              setLoading(false)\r\n            }\r\n    \r\n            var temp_data = {\r\n                name : response.name,\r\n                id : response.event_id,\r\n                start: response.start,\r\n                end: response.end,\r\n                address: response.address,\r\n                facility: response.facility,\r\n                description: response.description,\r\n                dei_affiliation: response.dei_affiliation,\r\n                attendees: response.attendees,\r\n                recruiting_partner: response.recruiting_partner,\r\n                contact_ids: response.host_ids,\r\n                talk_ids: response.talk_ids\r\n\r\n            }\r\n            setFormData(temp_data)\r\n          })\r\n        CAPIService.getSpeaker(currentUser.email)\r\n        .then(response => {\r\n            setSpeaker_id(response.speaker_id)\r\n        })\r\n\r\n        CAPIService.getUserRatingOfEvent(event_id, currentUser.email).then(response => {\r\n            changeRating(response.user_rating)\r\n        })\r\n    \r\n          return function cleanup() {\r\n            mounted = false\r\n          }\r\n      }, [currentUser.email, event_id])\r\n\r\n      const addRating = ()=>{\r\n        CAPIService.addRating({event_id:event_id,rating,speaker_id:speaker_id,timestamp:moment()})       \r\n        .then(res=>{\r\n            \r\n        })\r\n    }\r\n    // const getAllRatings = ()=>{\r\n    //     CAPIService.getRatingByEventByID(event_id)       \r\n    //     .then(res=>{\r\n    //         console.log(res);\r\n    //     })\r\n        \r\n    //   }\r\n      const changeRating = (idx)=>{\r\n        setRating(idx);\r\n      }\r\n    return (\r\n        <div> {loading ? <p>loading...</p> :\r\n        <Container>\r\n            <Row><Col><h2>{formData.name}</h2></Col></Row>\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <div style = {{paddingBottom:'20px'}}>\r\n                        <Container>\r\n                        <Row><div>{formData.facility}</div></Row>\r\n                        <Row><div>{formData.address}</div></Row>\r\n                        </Container>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                    <div style = {{paddingBottom:'20px', height:'120px', width:'200px', outline:'2px black solid', textAlign:'left'}}>{formData.description}</div>\r\n                    \r\n                    </Row>\r\n                    <Row>\r\n                    <div style = {{padding:'5px',marginTop:20, height:'100px', width:'200px', outline:'2px black solid', textAlign:'left'}}>\r\n                        <div>User Rating</div>\r\n                        <div>\r\n                            {\r\n                                [0,1,2,3,4,5,6,7,8,9].map((item,idx)=>{\r\n                                    return <span \r\n                                        style={{\r\n                                            color:idx<=rating?'#eeee53':'#ccc',\r\n                                            fontSize:20\r\n                                        }}\r\n                                        onClick={()=>changeRating(idx)}\r\n                                    >★</span>\r\n                                })\r\n                            }\r\n                            {/* <button onClick={()=>getAllRatings()}>getall</button> */}\r\n                        </div>\r\n                        <Button onClick={addRating} theme=\"success\" size=\"sm\">confirm</Button>\r\n                    </div>\r\n                    </Row>\r\n                    <Row style= {{padding:0}}>\r\n                    <Col sm={{ size: 8, order: 2, offset: 0 }} style = {{marginTop:20, width:'200px', padding:0}}>\r\n                        <CContactList contact_ids={formData.contact_ids} event_id={event_id} />\r\n                    </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Row >\r\n\r\n                    <div style = {{paddingBottom:'20px', width:'100%'}}>\r\n                    <Container>\r\n                    <Row><div style = {{width:'100%'}} align='right'>Start: {moment(formData.start).format('LL')}</div></Row>\r\n                        <Row><div style = {{width:'100%'}} align='right'>End: {moment(formData.end).format('LL')}</div></Row>\r\n                        </Container>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                    <div style = {{width:'100%'}} align='right'>\r\n                        <Container>\r\n                            {formData.dei_affiliation ? <Row><div style = {{width:'100%'}} align='right'>DEI affiliated</div></Row> : <div style = {{width:'100%'}} align='right'></div>}\r\n                            {formData.recruiting_partner ? <Row><div style = {{width:'100%'}} align='right'>Recruiting Partner</div></Row> : <div style = {{width:'100%'}} align='right'></div>}\r\n                            <Row><div style = {{width:'100%'}} align='right'>Attendees: {formData.attendees}</div></Row>\r\n                            <Row><Col sm={{ size: 8, order: 2, offset: 5 }}><CConferenceTalkList talk_ids={formData.talk_ids} event_id={event_id}/></Col></Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n        }</div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col, ListGroup, ListGroupItem, Form, FormInput, FormGroup, Button, ModalBody, Nav, NavItem, NavLink, Modal } from 'shards-react'\r\nimport DatePicker from \"react-datepicker\";\r\nimport CAPIService from './CAPIService'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n\r\nexport default function CEventTalk({ event_id }) {\r\n    const { currentUser } = useAuth()\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [talk, setTalk] = useState({});\r\n    const [event, setEvent] = useState([]);\r\n    const [open, setOpen] = useState(false)\r\n    const [newActive, setNewActive] = useState(true);\r\n    const [eventId, setEventid] = useState('');\r\n    const [eventTalks, setEventTalks] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n\r\n\r\n        get_talk()\r\n        console.log(talk)\r\n        CAPIService.getAllUserEvents(currentUser.email)\r\n            .then(res2 => {\r\n                if (mounted) {\r\n                    setLoading(false)\r\n                  }\r\n                setEvent(res2['event_pairs']);\r\n            })\r\n\r\n            var temp_array = []\r\n\r\n            for (var i = 0; i < event.length; i++){\r\n                for (var j = 0; j < talk['event_ids'].length; j++){\r\n                    if (event[i].id === talk['event_ids'][j]){\r\n                      temp_array.push(\r\n                          event[i].event_name\r\n                        )\r\n                      break\r\n                    }\r\n                }\r\n            }\r\n            setEventTalks(temp_array)\r\n\r\n        \r\n            return function cleanup() {\r\n                mounted = false\r\n              }\r\n    }, [currentUser.email, event])\r\n\r\n\r\n    const get_talk = async () => {\r\n        CAPIService.getTalkByID(event_id)\r\n        .then(res => {\r\n        setTalk(res);\r\n    })\r\n    }\r\n\r\n    \r\n    const add = async () => {\r\n        await CAPIService.addTalkToEventByEventId({ event_id: eventId, talk_id: event_id })\r\n        await CAPIService.addEventToTalkByTalkId({ event_id: eventId, talk_id: event_id })\r\n        setOpen(false);\r\n    }\r\n    return (\r\n        <div>\r\n            {loading ? <div></div> : <Container>\r\n            <Row><Col><h2 style={ { textAlign: 'center' } }>{talk.title}</h2></Col></Row>\r\n            <Row>\r\n                <Col>\r\n                    <Row>\r\n                        <Container>\r\n                            <Row>\r\n                                <div style={ {\r\n                                    border: '1px solid rgba(0,0,0,.125)',\r\n                                    width: '80%', height: 300, padding: 15\r\n                                } }>{ talk.description }</div>\r\n                            </Row>\r\n                        </Container>\r\n                    </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Row>\r\n                        <Container>\r\n                            <div style={ { display: 'flex', justifyContent: 'space-around', alignItems: 'center', padding: '15px 0', border: '1px solid rgba(0,0,0,.125)' } }>\r\n                                <h5 style={{marginBottom:0}}>Talk given at</h5>\r\n                                <Button onClick={ () => setOpen(!open) } outline size='sm' theme=\"light\" href=\"\">+</Button>\r\n                            </div>\r\n                            <ListGroup>\r\n                                {\r\n                                    \r\n                                    eventTalks.map(id => (\r\n                                        <ListGroupItem squared theme='light' outline style={ { display: 'flex', justifyContent: 'space-around' } }><span>{ id }</span></ListGroupItem>\r\n                                    ))\r\n                                }\r\n                            </ListGroup>\r\n                        </Container>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Modal open={ open } toggle={ () => setOpen(!open) } >\r\n                <ModalBody>\r\n\r\n                    <h4 style={ { paddingTop: '20px', textAlign: 'center' } }>Add an Event</h4>\r\n                    <ListGroup style={ { width: '60%', margin: '10px auto' } }>\r\n                        {\r\n                            event.map(ev => (\r\n                                <Button onClick={ () => setEventid(ev.id) } squared theme='light' outline={ eventId != ev.id } style={ { display: 'flex', justifyContent: 'space-around' } }>{ ev.event_name }</Button>\r\n                            ))\r\n                        }\r\n                    </ListGroup>\r\n                    <div style={ { textAlign: 'center' } }>\r\n                        <Button onClick={ () => add() } > Add </Button>\r\n\r\n                    </div>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </Container>}</div>\r\n    )\r\n}\r\n","import React, { useState,useEffect } from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport {Container, Row, Col} from 'shards-react'\r\nimport CAPIService from './CAPIService'\r\n\r\nimport moment from 'moment'\r\nimport { faLink,faFileAlt,faClock,faTags } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function CEventMedia({event_id}) {\r\n    const [value, onChange] = useState(new Date());\r\n    const [media, setMedia] = useState({});\r\n    useEffect(() => {\r\n        CAPIService.getMediaByID(event_id)\r\n          .then(res => {\r\n              setMedia(res);\r\n          })        \r\n      }, [event_id])\r\n    return (\r\n        <Container>\r\n            <Row><Col><h2 style={{textAlign:'center',marginBottom:50}}>{media.name}</h2></Col></Row>\r\n            <Row>\r\n                <Col sm=\"12\" md=\"12\" lg=\"6\">\r\n                    {/* <div style={ { border: '1px solid rgba(0,0,0,.125)', width: '80%', height: 200, padding: 15 } }>\r\n                        <p>{media['description']}</p>\r\n                    </div> */}\r\n                    <div style={{display:'flex',fontSize:20}}>\r\n                        <div style={{marginRight:5,width:170,fontWeight:'bold'}}>\r\n                            <FontAwesomeIcon style={{marginRight:10}} icon={ faFileAlt } />\r\n                            description :\r\n                        </div>\r\n                        <span style={{flex:1}}>{media['description']}</span>\r\n                    </div>\r\n                    <div style={{marginTop:20,display:'flex',flexWrap:'wrap',fontSize:20}}>\r\n                        <div style={{marginRight:10,width:120,fontWeight:'bold'}}>\r\n                            <FontAwesomeIcon style={{marginRight:10}} icon={ faLink } />\r\n                            Link :\r\n                        </div>\r\n                       <span style={{flex:1}}>{media['link']}</span>\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col sm=\"12\" md=\"12\" lg=\"6\">\r\n                    <div style={{display:'flex',flexWrap:'wrap',fontSize:20}}>\r\n                        <div style={{marginRight:10,width:120,fontWeight:'bold'}}>\r\n                            <FontAwesomeIcon  style={{marginRight:10}} icon={ faClock } />\r\n                            Entered :\r\n                        </div>\r\n                        {moment(media['time']).format('LL')}\r\n                    </div>\r\n                    <div style={{marginTop:20,display:'flex',flexWrap:'wrap',fontSize:20}}>\r\n                        <div style={{marginRight:10,width:120,fontWeight:'bold'}}>\r\n                            <FontAwesomeIcon  style={{marginRight:10}} icon={ faTags } />\r\n                            Type :\r\n                        </div>\r\n                        {media['type']}\r\n                    </div>\r\n                    {/* <div>\r\n                        Entered {moment(media['time']).format('LL')}\r\n                    </div>\r\n                    <div>\r\n                    Type: {media['type']}\r\n                    </div> */}\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport CEventConference from './CEventConference'\r\nimport CEventTalk from './CEventTalk'\r\nimport CEventMedia from './CEventMedia'\r\n\r\nexport default function CEvent({ type, event_id }) {\r\n\r\n    if (type === 'Conference') {\r\n        return (\r\n            <div style={ { margin: '20px' } }>\r\n                <CEventConference event_id={ event_id } />\r\n            </div>\r\n        )\r\n    }\r\n    else if (type === 'Talk') {\r\n        return (\r\n            <div style={ { margin: '20px' } }>\r\n                <CEventTalk event_id={ event_id } />\r\n            </div>\r\n        )\r\n    }\r\n    else if (type === 'Media') {\r\n        return <div style={ { margin: '20px' } }>\r\n            <CEventMedia event_id={ event_id } />\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Container, Row, Col } from 'shards-react'\r\n\r\nimport CEventList from './CEventList'\r\nimport CEvent from './CEvent'\r\n\r\nexport default function CEventBrowser({ type, event_data }) {\r\n    const [selectedEvent, setSelectedEvent] = useState()\r\n    const [isSelected, setIsSelected] = useState(false)\r\n\r\n    const select_Event = (event) => {\r\n        setSelectedEvent(event.id)\r\n        setIsSelected(true)\r\n        \r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div style={ { padding: \"20px\" } }>\r\n            <Container fluid={ true }>\r\n                <Row noGutters={ true }>\r\n                    <Col sm=\"12\" md=\"4\" lg=\"4\">\r\n                        <CEventList type={ type } event_data={ event_data } select_Event={select_Event}/>\r\n                    </Col>\r\n                    <Col sm=\"12\" md=\"8\" lg=\"8\">\r\n                        {isSelected ? <CEvent type={ type } event_id={selectedEvent} key={JSON.stringify(selectedEvent)} /> : <div></div> }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport CAPIService from './CAPIService'\r\nimport CEventBrowser from './CEventBrowser'\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function CConferences() {\r\n    const [event_data, setEvent_data] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        CAPIService.getAllUserEvents(currentUser.email)\r\n          .then(response => {\r\n            if (mounted) {\r\n              setLoading(false)\r\n            }\r\n    \r\n            var temp_array = []\r\n            for (var i = 0; i < response.event_pairs.length; i++){\r\n              temp_array.push({\r\n                name : response.event_pairs[i].event_name,\r\n                id : response.event_pairs[i].id      \r\n              })\r\n            }\r\n            setEvent_data(temp_array)\r\n          })\r\n    \r\n          return function cleanup() {\r\n            mounted = false\r\n          }\r\n      }, [currentUser.email])\r\n\r\n    return (\r\n        <div> {loading ? <p>loading...</p> :\r\n        <div>\r\n            <CEventBrowser type='Conference' event_data={event_data} />\r\n        </div>}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport CAPIService from './CAPIService'\r\nimport CEventBrowser from './CEventBrowser'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function CTalks() {\r\n  const [event_data, setEvent_data] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const { currentUser } = useAuth()\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    CAPIService.getAllUserTalks(currentUser.email)\r\n      .then(response => {\r\n        if (mounted) {\r\n          setLoading(false)\r\n        }\r\n\r\n        var temp_array = []\r\n        for (var i = 0; i < response.talk_pairs.length; i++) {\r\n          temp_array.push({\r\n            name: response.talk_pairs[i].talk_name,\r\n            id: response.talk_pairs[i].id\r\n          })\r\n        }\r\n        setEvent_data(temp_array)\r\n      })\r\n\r\n    return function cleanup() {\r\n      mounted = false\r\n    }\r\n  }, [currentUser.email])\r\n\r\n  return (\r\n    <div> {loading ? <p>loading...</p> :\r\n      <div>\r\n        <CEventBrowser type='Talk' event_data={ event_data } />\r\n      </div> }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport CEventBrowser from './CEventBrowser'\r\nimport CAPIService from './CAPIService'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n\r\nexport default function CMedia() {\r\n  const { currentUser } = useAuth()\r\n  useEffect(() => {\r\n    // CAPIService.getAllMedia()\r\n    CAPIService.getAllUserMedia(currentUser.email)\r\n      .then(response => {\r\n\r\n        console.log(response);\r\n        var temp_array = []\r\n        for (var i = 0; i < response.media_pairs.length; i++) {\r\n          temp_array.push({\r\n            name: response.media_pairs[i].media_name,\r\n            id: response.media_pairs[i].id\r\n          })\r\n        }\r\n        setEvent_data(temp_array)\r\n      })\r\n\r\n\r\n  }, [])\r\n\r\n  const [event_data, setEvent_data] = useState([])\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <CEventBrowser type='Media' event_data={ event_data } />\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport { Form, FormInput, FormGroup, Container, Row, Col, Button, Alert } from \"shards-react\";\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport default function CLogin() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n    const { login } = useAuth()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n      e.preventDefault()\r\n\r\n      try{\r\n        setError('')\r\n        setLoading(true)\r\n        await login(email, password)\r\n        history.push(\"/\")\r\n      }\r\n      catch{\r\n        setError('Failed to sign in.')\r\n      }\r\n\r\n      setLoading(false)\r\n      \r\n    }\r\n\r\n    const handleEmailChange = (event) => {\r\n      setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n      setPassword(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <Container style={{width:'100%'}}>\r\n        <Row>\r\n        <Col sm=\"12\" md=\"4\" lg=\"6\">\r\n          {error && <Alert theme=\"danger\">{error}</Alert>}\r\n        <Form  onSubmit={handleSubmit}>\r\n        <FormGroup id=\"email\">\r\n          <label htmlFor=\"#email\">Email</label>\r\n          <FormInput placeholder=\"Email\" type=\"email\" value={email} onChange={handleEmailChange} required/>\r\n        </FormGroup>\r\n        <FormGroup id=\"password\">\r\n          <label htmlFor=\"#password\">Password</label>\r\n          <FormInput type=\"password\" placeholder=\"Password\" value={password} onChange={handlePasswordChange} required/>\r\n        </FormGroup>\r\n        <Button disabled={loading} type=\"submit\" value=\"Submit\">Submit</Button>\r\n      </Form>\r\n    </Col>\r\n    </Row>\r\n      </Container>\r\n    )\r\n}\r\n","\r\nimport React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function CTest() {\r\n    return (\r\n        <div>\r\n            woo, tester\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from  'react-router-dom'\r\n\r\nimport {AuthProvider} from '../contexts/AuthContext'\r\nimport Cnavbar from './Cnavbar'\r\nimport CHomepage from './CHomepage'\r\nimport CConferences from './CConferences'\r\nimport CTalks from './CTalks'\r\nimport CMedia from './CMedia'\r\nimport CLogin from './CLogin'\r\nimport CPrivateRoute from './CPrivateRoute'\r\nimport CTest from './CTest'\r\n\r\nexport default function Crouter() {\r\n    return (\r\n        <Router>\r\n\r\n            <AuthProvider>\r\n\r\n            <Cnavbar />\r\n            <Switch>\r\n\r\n            <CPrivateRoute path=\"/\" exact component={CHomepage} />\r\n            <CPrivateRoute path=\"/conferences\" exact component={CConferences} />\r\n            <CPrivateRoute path=\"/talks\" exact component={CTalks} />\r\n            <CPrivateRoute path=\"/media\" exact component={CMedia} />\r\n            <CPrivateRoute path=\"/test\" exact component={CTest} />\r\n\r\n            <Route path=\"/login\" exact component={CLogin}>\r\n            </Route>\r\n            </Switch>\r\n            </AuthProvider>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './App.css';\r\n\r\nimport Crouter from './components/Crouter'\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Crouter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}